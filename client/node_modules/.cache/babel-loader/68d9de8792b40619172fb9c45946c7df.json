{"ast":null,"code":"var _jsxFileName = \"/Users/as/Desktop/Co-Founder/client/src/routes/article/index.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Style from \"./Article.module.css\";\nimport Blogheader from \"../../components/blogheader/index\";\nimport ReactMarkdown from \"react-markdown\";\nimport Skeleton, { SkeletonTheme } from \"react-loading-skeleton\";\nimport { API } from \"../../backend\";\n\nconst Article = () => {\n  // let history = useHistory();\n  // const [article, setArticle] = useState({});\n  // const { slug } = useParams();\n  // useEffect(() => {\n  //   getDataBySlug(slug);\n  // }, [slug]);\n  // const getDataBySlug = async (slug) => {\n  //   try {\n  //     const res = await axios.get(`${API}/api/post/${slug}`);\n  //     setArticle(res.data);\n  //   } catch (err) {\n  //     console.log({ error: err });\n  //   }\n  // };\n  // const deleteArticle = async (id) => {\n  //   if (window.confirm(\"Do you wanna delete this article?\")) {\n  //     try {\n  //       axios.defaults.headers.common[\"Authorization\"] = sessionStorage.token;\n  //       await axios.delete(\n  //         `https://rhodlib-blog.herokuapp.com/api/delete/${id}`\n  //       );\n  //       history.push(\"/\");\n  //     } catch (err) {\n  //       console.log({ error: err });\n  //     }\n  //   }\n  // };\n  // const editDeleteArticle = (id) => {\n  //   if (sessionStorage.token) {\n  //     return (\n  //       <div className={Style.buttons}>\n  //         <button\n  //           onClick={() => deleteArticle(id)}\n  //           className={Style.linkButton}\n  //         >\n  //           Delete\n  //         </button>\n  //         <button\n  //           onClick={() => history.push(`/edit/${slug}`)}\n  //           className={Style.linkButton}\n  //         >\n  //           Edit\n  //         </button>\n  //       </div>\n  //     );\n  //   }\n  // };\n  const [article, setArticle] = useState({\n    title: \"\",\n    description: \"\",\n    markdown: \"\"\n  });\n  const {\n    title,\n    description,\n    markdown\n  } = article;\n  const {\n    postId\n  } = useParams();\n  console.log(postId);\n\n  const getPostById = () => {\n    return fetch(`${API}/api/post/${postId}`).then(response => {\n      return response.json();\n    }).then(data => {\n      setArticle({ ...article,\n        title: title,\n        description: description,\n        markdown: markdown\n      });\n    });\n  };\n\n  const renderMarkdown = () => {\n    if (article.markdown === undefined) {\n      return /*#__PURE__*/React.createElement(SkeletonTheme, {\n        color: \"#161f27\",\n        highlightColor: \"#324759\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Skeleton, {\n        count: 15,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }\n      }));\n    } else {\n      return /*#__PURE__*/React.createElement(ReactMarkdown, {\n        className: Style.markdown,\n        source: markdown,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 14\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: Style.article,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: Style.controlHeader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Blogheader, {\n    title: title,\n    description: article.description,\n    createdAt: article.createdAt,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }), renderMarkdown());\n};\n\nexport default Article;","map":{"version":3,"sources":["/Users/as/Desktop/Co-Founder/client/src/routes/article/index.js"],"names":["React","useEffect","useState","useHistory","useParams","axios","Style","Blogheader","ReactMarkdown","Skeleton","SkeletonTheme","API","Article","article","setArticle","title","description","markdown","postId","console","log","getPostById","fetch","then","response","json","data","renderMarkdown","undefined","controlHeader","createdAt"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Style from \"./Article.module.css\";\nimport Blogheader from \"../../components/blogheader/index\";\nimport ReactMarkdown from \"react-markdown\";\nimport Skeleton, { SkeletonTheme } from \"react-loading-skeleton\";\nimport { API } from \"../../backend\";\n\nconst Article = () => {\n  // let history = useHistory();\n  // const [article, setArticle] = useState({});\n  // const { slug } = useParams();\n\n  // useEffect(() => {\n  //   getDataBySlug(slug);\n  // }, [slug]);\n\n  // const getDataBySlug = async (slug) => {\n  //   try {\n  //     const res = await axios.get(`${API}/api/post/${slug}`);\n  //     setArticle(res.data);\n  //   } catch (err) {\n  //     console.log({ error: err });\n  //   }\n  // };\n\n  // const deleteArticle = async (id) => {\n  //   if (window.confirm(\"Do you wanna delete this article?\")) {\n  //     try {\n  //       axios.defaults.headers.common[\"Authorization\"] = sessionStorage.token;\n  //       await axios.delete(\n  //         `https://rhodlib-blog.herokuapp.com/api/delete/${id}`\n  //       );\n  //       history.push(\"/\");\n  //     } catch (err) {\n  //       console.log({ error: err });\n  //     }\n  //   }\n  // };\n\n  // const editDeleteArticle = (id) => {\n  //   if (sessionStorage.token) {\n  //     return (\n  //       <div className={Style.buttons}>\n  //         <button\n  //           onClick={() => deleteArticle(id)}\n  //           className={Style.linkButton}\n  //         >\n  //           Delete\n  //         </button>\n  //         <button\n  //           onClick={() => history.push(`/edit/${slug}`)}\n  //           className={Style.linkButton}\n  //         >\n  //           Edit\n  //         </button>\n  //       </div>\n  //     );\n  //   }\n  // };\n\n  const [article, setArticle] = useState({\n    title: \"\",\n    description: \"\",\n    markdown: \"\",\n  });\n\n  const { title, description, markdown } = article;\n  const { postId } = useParams();\n  console.log(postId);\n  const getPostById = () => {\n    return fetch(`${API}/api/post/${postId}`)\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        setArticle({\n          ...article,\n          title: title,\n          description: description,\n          markdown: markdown,\n        });\n      });\n  };\n  const renderMarkdown = () => {\n    if (article.markdown === undefined) {\n      return (\n        <SkeletonTheme color=\"#161f27\" highlightColor=\"#324759\">\n          <Skeleton count={15} />\n        </SkeletonTheme>\n      );\n    } else {\n      return <ReactMarkdown className={Style.markdown} source={markdown} />;\n    }\n  };\n\n  return (\n    <div className={Style.article}>\n      <div className={Style.controlHeader}>\n        <Blogheader\n          title={title}\n          description={article.description}\n          createdAt={article.createdAt}\n        />\n        {/* {editDeleteArticle(article._id)} */}\n      </div>\n      <hr />\n      {renderMarkdown()}\n    </div>\n  );\n};\n\nexport default Article;\n"]},"metadata":{},"sourceType":"module"}